{"ast":null,"code":"import { COMMENT_USER_ERROR, DATA_USER_CORRECT, EMAIL_USER_ERROR, FETCH_USER_FAILURE, FETCH_USER_REQUEST, FETCH_USER_SUCCESS, NAME_USER_ERROR, TEL_USER_ERROR } from \"./userTypes\";\nexport const fetchUsersRequest = () => {\n  console.log(FETCH_USER_REQUEST);\n  return {\n    type: FETCH_USER_REQUEST\n  };\n};\nexport const fetchUsersSuccess = () => {\n  console.log(FETCH_USER_SUCCESS);\n  return {\n    type: FETCH_USER_SUCCESS\n  };\n};\nexport const fetchUsersFailure = () => {\n  console.log(FETCH_USER_FAILURE);\n  return {\n    type: FETCH_USER_FAILURE\n  };\n};\nexport const emailError = () => {\n  return {\n    type: EMAIL_USER_ERROR\n  };\n};\nexport const telError = () => {\n  return {\n    type: TEL_USER_ERROR\n  };\n};\nexport const nameError = () => {\n  return {\n    type: NAME_USER_ERROR\n  };\n};\nexport const commentError = () => {\n  return {\n    type: COMMENT_USER_ERROR\n  };\n};\nexport const correctValidation = () => {\n  return {\n    type: DATA_USER_CORRECT\n  };\n};\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest());\n    fetch('https://formcarry.com/s/fCsjmrtmZ4', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: localStorage.user\n    }).then(response => {\n      console.log(response);\n      dispatch(fetchUsersSuccess());\n      localStorage.clear();\n    }).catch(error => {\n      console.log(error);\n      dispatch(fetchUsersFailure());\n    });\n  };\n};\nexport const validateUser = () => {\n  return dispatch => {\n    if (localStorage.user != null) {\n      let data = JSON.parse(localStorage.user);\n      const isEmail = str => /^(.+)@(.+)\\.(.+)$/.test(str);\n      const isMobilePhone = str => /^(\\+?7|8)?9\\d{9}$/.test(str);\n      const isAlpha = str => /^[A-ZА-ЯЁ]+$/i.test(str);\n      const emailValidation = isEmail(data.email);\n      const telValidation = isMobilePhone(data.tel);\n      const nameValidation = isAlpha(data.fio);\n      if (data.fio === \"\" || !nameValidation) {\n        dispatch(nameError());\n        return;\n      }\n      if (!telValidation || data.tel === \"\") {\n        dispatch(telError());\n        return;\n      }\n      if (!emailValidation || data.email === \"\") {\n        dispatch(emailError());\n        return;\n      }\n      if (data.comment === \"\") {\n        dispatch(commentError());\n        return;\n      }\n      dispatch(correctValidation());\n    }\n  };\n};","map":{"version":3,"names":["COMMENT_USER_ERROR","DATA_USER_CORRECT","EMAIL_USER_ERROR","FETCH_USER_FAILURE","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","NAME_USER_ERROR","TEL_USER_ERROR","fetchUsersRequest","console","log","type","fetchUsersSuccess","fetchUsersFailure","emailError","telError","nameError","commentError","correctValidation","fetchUsers","dispatch","fetch","method","headers","body","localStorage","user","then","response","clear","catch","error","validateUser","data","JSON","parse","isEmail","str","test","isMobilePhone","isAlpha","emailValidation","email","telValidation","tel","nameValidation","fio","comment"],"sources":["E:/web/WebProject/univer-project/src/redux/userActions.js"],"sourcesContent":["import { COMMENT_USER_ERROR, DATA_USER_CORRECT, EMAIL_USER_ERROR, FETCH_USER_FAILURE, FETCH_USER_REQUEST, FETCH_USER_SUCCESS, NAME_USER_ERROR, TEL_USER_ERROR } from \"./userTypes\"\r\n\r\nexport const fetchUsersRequest = () => {\r\n    console.log(FETCH_USER_REQUEST)\r\n    return {\r\n        type: FETCH_USER_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchUsersSuccess = () => {\r\n    console.log(FETCH_USER_SUCCESS)\r\n    return {\r\n        type: FETCH_USER_SUCCESS\r\n    }\r\n}\r\n\r\nexport const fetchUsersFailure = () => {\r\n    console.log(FETCH_USER_FAILURE)\r\n    return {\r\n        type: FETCH_USER_FAILURE\r\n    }\r\n}\r\n\r\nexport const emailError = () => {\r\n\r\n    return {\r\n        type: EMAIL_USER_ERROR\r\n    }\r\n}\r\n\r\nexport const telError = () => {\r\n\r\n    return {\r\n        type: TEL_USER_ERROR\r\n    }\r\n}\r\n\r\nexport const nameError = () => {\r\n\r\n    return {\r\n        type: NAME_USER_ERROR\r\n    }\r\n}\r\n\r\nexport const commentError = () => {\r\n\r\n    return {\r\n        type: COMMENT_USER_ERROR\r\n    }\r\n}\r\n\r\nexport const correctValidation = () => {\r\n\r\n    return {\r\n        type: DATA_USER_CORRECT\r\n    }\r\n}\r\n\r\nexport const fetchUsers = () =>\r\n{\r\n    return (dispatch) => {\r\n        \r\n        dispatch(fetchUsersRequest())\r\n\r\n        fetch('https://formcarry.com/s/fCsjmrtmZ4', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},\r\n        body: localStorage.user\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            dispatch(fetchUsersSuccess());\r\n            localStorage.clear();})\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch(fetchUsersFailure());\r\n            });\r\n    }\r\n}\r\n\r\nexport const validateUser = () =>\r\n{\r\n    return (dispatch) => {\r\n\r\n        if(localStorage.user != null)\r\n        {\r\n            let data = JSON.parse(localStorage.user);\r\n\r\n        const isEmail = (str) => /^(.+)@(.+)\\.(.+)$/.test(str);\r\n        const isMobilePhone = (str) => /^(\\+?7|8)?9\\d{9}$/.test(str);\r\n        const isAlpha = (str) => /^[A-ZА-ЯЁ]+$/i.test(str)\r\n\r\n        const emailValidation = isEmail(data.email);\r\n        const telValidation = isMobilePhone(data.tel);\r\n        const nameValidation = isAlpha(data.fio);\r\n\r\n\r\n        if(data.fio === \"\" || !nameValidation)\r\n        {\r\n            dispatch(nameError()); \r\n            return;\r\n        }\r\n        if(!telValidation || data.tel === \"\")\r\n        {\r\n            dispatch(telError()); \r\n            return;\r\n        }\r\n\r\n        if(!emailValidation || data.email === \"\")\r\n        {\r\n            dispatch(emailError()); \r\n            return;\r\n        }\r\n\r\n        if(data.comment === \"\")\r\n        {\r\n            dispatch(commentError()); \r\n            return;\r\n        }\r\n\r\n        dispatch(correctValidation())\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}